{"version":3,"sources":["AppWrapper.js","products.js","BoxPlanner.js","BoxSlot.js","BoxWrapper.js","Insert.js","Box.js","BoxList.js","EditorWrapper.js","InsertEditor.js","InsertList.js","NewBoxModal.js","RepositionWrapper.js","TinyBox.js","RepositionHolder.js","Editor.js","ShoppingList.js","About.js","App.js","reportWebVitals.js","index.js"],"names":["AppWrapper","styled","div","availableSizes","availableColors","hex","ral","containerNrs","BoxPlanner","createContainer","initialState","JSON","parse","localStorage","getItem","useState","boxes","setBoxesState","setBoxes","setItem","stringify","showAddBox","setShowAddBox","Object","keys","activeBoxId","setActiveBoxId","repositioningInsert","setRepositioning","forBox","render","map","id","clearInserts","window","confirm","produce","draft","inserts","selectSlot","slot","selectionStart","uuid","sizeX","sizeY","prototype","label","color","repositionInsert","insertId","insert","boxId","cancelReposition","selectInsert","activeInsert","activeBox","getSlots","box","slots","x","y","selectable","selected","totalSizeX","Math","abs","totalSizeY","biggerSide","max","smallerSide","min","sizeExists","size","push","createBox","product","newBoxId","updateBox","BoxSlot","props","scale","BoxWrapper","active","repeat","Insert","editing","Box","preview","onClick","useContainer","className","BoxListWrapper","BoxList","Button","EditorWrapper","main","Swatch","InsertEditor","updateInsert","updatedInsert","Form","onSubmit","e","preventDefault","FormField","Input","type","onChange","target","value","length","changeColor","InsertList","insertKey","Card","fluid","Content","Header","NewBoxModal","setBox","Modal","onClose","onOpen","open","Description","style","display","justifyContent","Actions","RepositionWrapper","TinyBox","RepositionHolder","console","log","flex","Editor","ShoppingListWrapper","ShoppingList","insertList","setInsertList","boxList","setBoxList","useEffect","boxCounts","forEach","boxKey","count","sort","a","b","insertName","sizeA","sizeB","key","toUpperCase","About","Container","href","licenses","packageName","index","rel","repository","licenseUrl","MenuLink","path","children","exact","match","useRouteMatch","history","useHistory","Menu","Item","App","Provider","basename","inverted","fixed","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a14d18.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  padding-top: 40px;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n","const availableSizes = [\n  [1, 1],\n  [2, 1],\n  [3, 1],\n  [4, 1],\n  [5, 1],\n  [2, 2],\n  [3, 2],\n  [5, 2],\n  [6, 2],\n];\n\nlet availableColors = [\n  { hex: \"#f3be38\", ral: \"RAL 1003\" },\n  { hex: \"#d81a21\", ral: \"RAL 3020\" },\n  { hex: \"#007cb6\", ral: \"RAL 5015\" },\n  { hex: \"#48A43F\", ral: \"RAL 6018\" },\n  { hex: \"#999999\", ral: \"RAL 7001\" },\n  { hex: \"#383e42\", ral: \"RAL 7016\" },\n];\n\nlet containerNrs = {\n  \"5x3\": \"SB 32\",\n  \"6x5\": \"SB 353\",\n  \"7x5\": \"SB 43\",\n  \"8x6\": \"SB 443\",\n  \"11x7\": \"SB 64\",\n};\n\nexport { availableSizes, availableColors, containerNrs };\n","import { createContainer } from \"unstated-next\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport produce from \"immer\";\nimport { availableColors, availableSizes } from \"./products\";\n\nconst useBoxPlanner = () => {\n  const initialState = JSON.parse(localStorage.getItem(\"app-state\") ?? \"{}\");\n\n  const [boxes, setBoxesState] = useState(initialState);\n\n  const setBoxes = (boxes) => {\n    localStorage.setItem(\"app-state\", JSON.stringify(boxes));\n\n    setBoxesState(boxes);\n  };\n\n  const [showAddBox, setShowAddBox] = useState(false);\n  const [activeBoxId, setActiveBoxId] = useState(\n    boxes != null ? Object.keys(boxes)[0] : null\n  );\n  const [repositioningInsert, setRepositioning] = useState(null);\n\n  // Update the box with the given id.\n  const updateBox = (id, box) => {\n    setBoxes(\n      produce(boxes, (draft) => {\n        if (box != null) {\n          draft[id] = box;\n        } else {\n          // Delete if null\n          delete draft[id];\n        }\n        return draft;\n      })\n    );\n  };\n  // Create a new box\n  const createBox = (product) => {\n    const newBoxId = uuid();\n    setBoxes(\n      produce(boxes, (draft) => {\n        draft[newBoxId] = {\n          ...product,\n          inserts: {},\n        };\n        return draft;\n      })\n    );\n    // Hide the modal\n    setShowAddBox(false);\n    // Select the box\n    setActiveBoxId(newBoxId);\n  };\n\n  const getSlots = (box) => {\n    let slots = [];\n\n    const { selectionStart, inserts, sizeY, sizeX } = box;\n\n    for (let x = 0; x < sizeX; x++) {\n      for (let y = 0; y < sizeY; y++) {\n        let slot = {\n          selectable: true,\n          x,\n          y,\n          selected: selectionStart?.x === x && selectionStart?.y === y,\n        };\n        // If the user already started a selection determine selection\n        if (selectionStart != null) {\n          let totalSizeX = Math.abs(selectionStart.x - x) + 1;\n          let totalSizeY = Math.abs(selectionStart.y - y) + 1;\n\n          const biggerSide = Math.max(totalSizeX, totalSizeY);\n          const smallerSide = Math.min(totalSizeX, totalSizeY);\n          let sizeExists = false;\n          for (var size of availableSizes) {\n            if (size[0] === biggerSide && size[1] === smallerSide) {\n              sizeExists = true;\n            }\n          }\n          slot.selectable = sizeExists;\n\n          // Insert that would be generated if the user selected this insert now.\n          let prototype = {\n            x: Math.min(selectionStart.x, x),\n            y: Math.min(selectionStart.y, y),\n            sizeX: totalSizeX,\n            sizeY: totalSizeY,\n          };\n\n          slot.prototype = prototype;\n\n          // Now determine if the prototype would collide with existing inserts\n\n          for (let insertId of Object.keys(inserts)) {\n            let insert = inserts[insertId];\n            if (\n              insert.x < prototype.x + prototype.sizeX &&\n              insert.x + insert.sizeX > prototype.x &&\n              insert.y < prototype.y + prototype.sizeY &&\n              insert.y + insert.sizeY > prototype.y\n            ) {\n              slot.selectable = false;\n              break;\n            }\n          }\n        } else {\n          // No selection was started. So just sort out slots that are already occupied by inserts\n          for (let insertId of Object.keys(inserts)) {\n            let insert = inserts[insertId];\n            if (\n              x >= insert.x &&\n              x < insert.x + insert.sizeX &&\n              y >= insert.y &&\n              y < insert.y + insert.sizeY\n            ) {\n              slot.selectable = false;\n              break;\n            }\n          }\n        }\n        slots.push(slot);\n      }\n    }\n    return slots;\n  };\n\n  const selectSlot = (slot) => {\n    let box = boxes[activeBoxId];\n    if (box.selectionStart != null) {\n      setBoxes(\n        produce(boxes, (draft) => {\n          const id = uuid();\n\n          if (repositioningInsert != null) {\n            // Check size\n\n            if (\n              repositioningInsert.sizeX * repositioningInsert.sizeY !==\n              slot.prototype.sizeX * slot.prototype.sizeY\n            ) {\n              if (\n                !window.confirm(\"Your new box has a different size. Continue?\")\n              ) {\n                return;\n              }\n            }\n          }\n\n          draft[activeBoxId].inserts[id] = {\n            label: \"\",\n            color: availableColors[0],\n            ...repositioningInsert,\n            ...slot.prototype,\n          };\n          draft[activeBoxId].selectionStart = null;\n\n          setRepositioning(null);\n\n          return draft;\n        })\n      );\n    } else {\n      setBoxes(\n        produce(boxes, (draft) => {\n          draft[activeBoxId].selectionStart = slot;\n\n          return draft;\n        })\n      );\n    }\n  };\n\n  const repositionInsert = (insertId) => {\n    let box = boxes[activeBoxId];\n    let insert = box.inserts[insertId];\n\n    setRepositioning({ ...insert, boxId: activeBoxId, insertId });\n\n    setBoxes(\n      produce(boxes, (draft) => {\n        delete draft[activeBoxId].inserts[insertId];\n\n        return draft;\n      })\n    );\n  };\n\n  const cancelReposition = () => {\n    if (repositioningInsert != null) {\n      const { boxId, insertId } = repositioningInsert;\n      setBoxes(\n        produce(boxes, (draft) => {\n          draft[boxId].inserts[insertId] = repositioningInsert;\n\n          return draft;\n        })\n      );\n      setRepositioning(null);\n    }\n  };\n\n  const clearInserts = () => {\n    if (window.confirm(\"Are you sure?\")) {\n      setBoxes(\n        produce(boxes, (draft) => {\n          draft[activeBoxId].inserts = {};\n\n          return draft;\n        })\n      );\n    }\n  };\n\n  const selectInsert = (id) => {\n    setBoxes(\n      produce(boxes, (draft) => {\n        draft[activeBoxId].activeInsert = id;\n\n        return draft;\n      })\n    );\n  };\n\n  return {\n    showAddBox,\n    forBox: (render) => Object.keys(boxes).map((id) => render(id, boxes[id])),\n    setShowAddBox,\n    clearInserts,\n    selectSlot,\n    repositionInsert,\n    repositioningInsert,\n    cancelReposition,\n    selectInsert,\n    activeBox: boxes[activeBoxId],\n    activeBoxId,\n    getSlots,\n    createBox,\n    updateBox,\n    setActiveBoxId,\n    boxes,\n  };\n};\n\nlet BoxPlanner = createContainer(useBoxPlanner);\n\nexport default BoxPlanner;\n","import styled from \"styled-components\";\n\nexport const BoxSlot = styled.div`\n  background: ${(props) => {\n    if (props.selected) {\n      return \"#aaa\";\n    }\n    if (props.selectable) {\n      return \"#dadada\";\n    }\n    return \"#fafafa\";\n  }};\n  border-radius: ${(props) => 1.5 * props.scale}px;\n  transition: all 0.2s ease-in-out;\n\n  grid-column: ${(props) => props.x + 1};\n  grid-row: ${(props) => props.y + 1};\n`;\n","import styled from \"styled-components\";\n\nexport const BoxWrapper = styled.div`\n  background: #fff;\n  border-radius: ${(props) => Math.max(1.5 * props.scale, 4)}px;\n  display: flex;\n  margin: ${(props) => 10 * props.scale}px;\n  flex-direction: column;\n  padding: 1rem;\n  border: ${(props) => (props.active ? \"1px solid #000\" : \"1px solid #ddd\")};\n\n  .content {\n    position: relative;\n    width: calc(${(props) => props.sizeX * props.scale}vw);\n    height: ${(props) => props.sizeY * props.scale}vw;\n    > div {\n      position: absolute;\n      display: grid;\n      grid-gap: 5px;\n      grid-template-columns: ${(props) =>\n        \"minmax(0, 1fr) \".repeat(props.sizeX)};\n      grid-template-rows: ${(props) => \"minmax(0, 1fr) \".repeat(props.sizeY)};\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .inserts {\n      pointer-events: none;\n      > div {\n        pointer-events: all;\n      }\n    }\n  }\n\n  small {\n    text-align: center;\n    color: #ddd;\n    display: block;\n  }\n  .inserts {\n    display: grid;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Insert = styled.div`\n  grid-row-start: ${(props) => props.y + 1};\n  grid-row-end: ${(props) => props.y + 1 + props.sizeY};\n  grid-column-start: ${(props) => props.x + 1};\n  grid-column-end: ${(props) => props.x + 1 + props.sizeX};\n  background: ${(props) => props.color.hex};\n  opacity: 1;\n  border: 2px solid ${(props) => (props.editing ? \"#000\" : \"#ddd\")};\n  display: flex;\n  overflow: hidden;\n  transition: all 0.3s ease-in-out;\n  align-items: center;\n  text-align: center;\n  color: #fff;\n  justify-content: center;\n  /*box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.8);*/\n  border-radius: ${(props) => 1.5 * props.scale}px;\n`;\n","import React from \"react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { BoxSlot } from \"./BoxSlot\";\nimport { BoxWrapper } from \"./BoxWrapper\";\nimport { Insert } from \"./Insert\";\n\nconst Box = ({ box, scale, preview, onClick }) => {\n  const { sizeX, sizeY, inserts } = box;\n\n  const { getSlots, selectSlot, selectInsert } = BoxPlanner.useContainer();\n\n  return (\n    <>\n      <BoxWrapper scale={scale} sizeX={sizeX} sizeY={sizeY}>\n        <div onClick={preview ? onClick : null} className=\"content\">\n          <div className=\"inserts\">\n            {getSlots(box).map((slot) => {\n              return (\n                <BoxSlot\n                  x={slot.x}\n                  selected={slot.selected}\n                  scale={scale}\n                  onClick={() => {\n                    if (!preview) selectSlot(slot);\n                  }}\n                  selectable={slot.selectable}\n                  y={slot.y}\n                ></BoxSlot>\n              );\n            })}\n          </div>\n          <div className=\"inserts\">\n            {Object.keys(inserts).map((insertId) => {\n              let insert = inserts[insertId];\n              let label;\n              if (!preview) {\n                label = `${insert.sizeX}x${insert.sizeY}`;\n                if (insert.label) {\n                  label = insert.label;\n                }\n              }\n\n              return (\n                <Insert\n                  editing={insertId === box.activeInsert}\n                  scale={scale}\n                  onClick={() => {\n                    if (preview) return;\n                    if (insertId === box.activeInsert) {\n                      selectInsert(null);\n                      return;\n                    }\n                    selectInsert(insertId);\n                  }}\n                  {...insert}\n                >\n                  {label}\n                </Insert>\n              );\n            })}\n          </div>\n        </div>\n      </BoxWrapper>\n    </>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport Box from \"./Box\";\nimport styled from \"styled-components\";\nimport { Button } from \"semantic-ui-react\";\n\nconst BoxListWrapper = styled.div`\n  border-bottom: 1px solid #ddd;\n  padding: 1rem;\n  display: flex;\n`;\n\nconst BoxList = () => {\n  const { forBox, setActiveBoxId, setShowAddBox } = BoxPlanner.useContainer();\n\n  return (\n    <BoxListWrapper>\n      {forBox((id, box) => (\n        <Box\n          boxId={id}\n          onClick={() => {\n            setActiveBoxId(id);\n          }}\n          preview\n          box={box}\n          scale={0.5}\n        />\n      ))}\n\n      <Button onClick={() => setShowAddBox(true)}>Add box</Button>\n    </BoxListWrapper>\n  );\n};\n\nexport default BoxList;\n","import styled from \"styled-components\";\n\nexport const EditorWrapper = styled.main`\n  flex: 1;\n  display: flex;\n\n  .editor {\n    display: flex;\n    position: relative;\n    overflow: hidden;\n    align-items: center;\n    flex: 1;\n\n    justify-content: center;\n    background: #fafafa;\n  }\n  .inspector {\n    min-width: 30%;\n\n    overflow-y: auto;\n    padding: 1rem;\n    border-left: 1px solid #ddd;\n  }\n`;\n","import produce from \"immer\";\nimport React from \"react\";\nimport { Button, Form, FormField, Input } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { availableColors } from \"./products\";\n\n// Color selection box\nexport const Swatch = styled.div`\n  display: inline-block;\n  width: 32px;\n  border-radius: 4px;\n  height: 32px;\n  border: 1px solid ${(props) => (props.active ? \"#000\" : \"#ddd\")};\n  margin: 5px;\n  transition: opacity 0.2s ease-in-out;\n  opacity: ${(props) => (props.active ? 1 : 0.5)};\n  cursor: pointer;\n  background: ${(props) => props.color.hex};\n  &:hover {\n    opacity: 1;\n  }\n`;\n\n// Available colors\n\n// Insert editor allows the user to modify the properties of a box insert.\n\nconst InsertEditor = ({ insertId }) => {\n  const { activeBox, updateBox, activeBoxId, repositionInsert } =\n    BoxPlanner.useContainer();\n\n  const insert = activeBox.inserts[insertId];\n\n  const updateInsert = (updatedInsert) => {\n    updateBox(\n      activeBoxId,\n      produce(activeBox, (draft) => {\n        if (updatedInsert == null) {\n          delete draft.inserts[insertId];\n        } else {\n          draft.inserts[insertId] = updatedInsert;\n        }\n\n        return draft;\n      })\n    );\n  };\n\n  const changeLabel = (e) => {\n    if (e.target.value.length > 24) {\n      return;\n    }\n    updateInsert(\n      produce(insert, (draft) => {\n        draft.label = e.target.value;\n        return draft;\n      })\n    );\n  };\n\n  const changeColor = (color) => {\n    updateInsert(\n      produce(insert, (draft) => {\n        draft.color = color;\n        return draft;\n      })\n    );\n  };\n\n  // Updating with value of null deletes the insert\n  const deleteInsert = () => updateInsert();\n\n  const submitted = (e) => {\n    e.preventDefault();\n  };\n\n  const reposition = () => {\n    repositionInsert(insertId);\n  };\n\n  return (\n    <Form onSubmit={submitted}>\n      <FormField>\n        <label>Label</label>\n      </FormField>\n      <Input type=\"text\" onChange={changeLabel} value={insert.label} />\n      <FormField>\n        <label>Color</label>\n\n        {availableColors.map((color) => {\n          return (\n            <Swatch\n              active={color === insert.color}\n              onClick={() => {\n                changeColor(color);\n              }}\n              color={color}\n            />\n          );\n        })}\n      </FormField>\n      <FormField>\n        <Button onClick={deleteInsert}>Remove</Button>\n        <Button onClick={reposition}>Move</Button>\n      </FormField>\n    </Form>\n  );\n};\n\nexport default InsertEditor;\n","import { Card } from \"semantic-ui-react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport InsertEditor from \"./InsertEditor\";\n\nconst InsertList = () => {\n  const { activeBox, selectInsert } = BoxPlanner.useContainer();\n\n  if (!activeBox) {\n    return <div />;\n  }\n\n  return (\n    <>\n      {Object.keys(activeBox.inserts).map((insertKey) => {\n        const insert = activeBox.inserts[insertKey];\n\n        const active = activeBox.activeInsert === insertKey;\n\n        return (\n          <Card\n            fluid\n            onClick={\n              active\n                ? null\n                : () => {\n                    selectInsert(insertKey);\n                  }\n            }\n          >\n            <Card.Content>\n              <Card.Header>\n                {insert?.sizeX}x{insert?.sizeY} - {insert?.label}\n                <br />\n                <small>{insert?.color.ral}</small>\n              </Card.Header>\n            </Card.Content>\n            {active ? (\n              <Card.Content>\n                <InsertEditor insertId={insertKey} />\n              </Card.Content>\n            ) : null}\n          </Card>\n        );\n      })}\n    </>\n  );\n};\n\nexport default InsertList;\n","import { useState } from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport Box from \"./Box\";\nimport BoxPlanner from \"./BoxPlanner\";\n\nconst NewBoxModal = () => {\n  const { createBox, showAddBox, setShowAddBox } = BoxPlanner.useContainer();\n\n  const [box, setBox] = useState({ sizeX: 5, sizeY: 3 });\n\n  const sizes = [\n    { sizeX: 5, sizeY: 3 },\n    { sizeX: 6, sizeY: 5 },\n    { sizeX: 7, sizeY: 5 },\n    { sizeX: 8, sizeY: 6 },\n    { sizeX: 11, sizeY: 7 },\n  ];\n\n  return (\n    <Modal\n      onClose={() => setShowAddBox(false)}\n      onOpen={() => setShowAddBox(true)}\n      open={showAddBox}\n    >\n      <Modal.Header>Select a box size</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Box box={{ ...box, inserts: [] }} scale={1}></Box>\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {sizes.map((size) => {\n              return (\n                <Button\n                  onClick={() => setBox(size)}\n                  active={size.sizeX === box.sizeX && size.sizeY === box.sizeY}\n                >\n                  {size.sizeX}x{size.sizeY}\n                </Button>\n              );\n            })}\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setShowAddBox(false)}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={() => createBox(box)}>\n          Create\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default NewBoxModal;\n","import styled from \"styled-components\";\n\nexport const RepositionWrapper = styled.div`\n  width: 20vw;\n\n  background: #fff;\n  box-shadow: 0 0 32px rgba(0, 0, 0, 0.2);\n  padding: 4rem;\n  border-radius: 16px;\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  display: flex;\n  transition: 0.2s ease-in-out;\n  transform: translateX(-50%)\n    translateY(${(props) => (props.active ? \"10%\" : \"120%\")});\n`;\n","import styled from \"styled-components\";\n\nexport const TinyBox = styled.div`\n  height: ${(props) => props.sizeY * 2}rem;\n  width: ${(props) => props.sizeX * 2}rem;\n  background: ${(props) => props.color?.hex};\n  border-radius: 4px;\n`;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { RepositionWrapper } from \"./RepositionWrapper\";\nimport { TinyBox } from \"./TinyBox\";\n\nexport const RepositionHolder = () => {\n  const { repositioningInsert, cancelReposition } = BoxPlanner.useContainer();\n\n  let label = repositioningInsert?.label ?? \"\";\n\n  console.log(repositioningInsert);\n\n  return (\n    <RepositionWrapper active={repositioningInsert != null}>\n      <div style={{ flex: 1 }}>\n        <b>Moving</b>\n\n        <br />\n        <span>{label.length === 0 ? \"No label\" : label}</span>\n        <br />\n        <span>\n          Original size: {repositioningInsert?.sizeX}x\n          {repositioningInsert?.sizeY}\n        </span>\n        <br />\n        <br />\n        <Button onClick={() => cancelReposition()}>Cancel</Button>\n      </div>\n\n      <TinyBox {...repositioningInsert} />\n    </RepositionWrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport Box from \"./Box\";\nimport BoxList from \"./BoxList\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { EditorWrapper } from \"./EditorWrapper\";\nimport InsertList from \"./InsertList\";\nimport NewBoxModal from \"./NewBoxModal\";\nimport { RepositionHolder } from \"./RepositionHolder\";\n\nconst Editor = () => {\n  const [scale, setScale] = useState(3);\n\n  const { activeBox, updateBox, activeBoxId, clearInserts } =\n    BoxPlanner.useContainer();\n\n  return (\n    <>\n      <BoxList></BoxList>\n      <EditorWrapper>\n        <NewBoxModal />\n\n        <div className=\"editor\">\n          {activeBox != null ? (\n            <Box\n              updateBox={(box) => updateBox(activeBox, box)}\n              active\n              scale={scale}\n              boxId={activeBoxId}\n              box={activeBox}\n            ></Box>\n          ) : null}\n\n          <RepositionHolder />\n        </div>\n        <div className=\"inspector\">\n          <h2>\n            {activeBox?.sizeX}x{activeBox?.sizeY}\n          </h2>\n          <Button onClick={clearInserts}>Clear inserts</Button>\n\n          <h3>Inserts</h3>\n          <InsertList />\n        </div>\n      </EditorWrapper>\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { useEffect, useState } from \"react\";\nimport { containerNrs } from \"./products\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport styled from \"styled-components\";\n\nconst ShoppingListWrapper = styled.main`\n  padding: 5rem 10vw;\n\n  .pricing-table {\n    border: 1px solid #ddd;\n    margin: 1rem 0;\n    padding: 1rem;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  }\n\n  table {\n    overflow: hidden;\n    thead {\n      tr {\n        border-bottom: 2px solid #ddd;\n      }\n    }\n    border-collapse: collapse;\n    tr {\n      border-bottom: 1px solid #ddd;\n    }\n    td {\n      padding: 0.5rem;\n    }\n    width: 100%;\n    th {\n      text-align: left;\n    }\n  }\n`;\n\nconst ShoppingList = () => {\n  const { boxes } = BoxPlanner.useContainer();\n\n  const [insertList, setInsertList] = useState({});\n  const [boxList, setBoxList] = useState({});\n\n  useEffect(() => {\n    let inserts = {};\n    let boxCounts = {};\n\n    Object.keys(boxes).forEach((boxId) => {\n      let box = boxes[boxId];\n      const boxKey = box.sizeX + \"x\" + box.sizeY;\n      if (boxCounts[boxKey] == null) {\n        boxCounts[boxKey] = { count: 1, ...box };\n      } else {\n        boxCounts[boxKey].count++;\n      }\n\n      setBoxList(boxCounts);\n\n      Object.keys(box.inserts)\n        .map((insertId) => box.inserts[insertId])\n        .sort((a, b) => Math.min(a.sizeY, a.sizeX) - Math.min(b.sizeY, b.sizeX))\n        .sort((a, b) => Math.max(a.sizeY, a.sizeX) - Math.max(b.sizeY, b.sizeX))\n        .forEach((insert) => {\n          const insertName =\n            Math.min(insert.sizeY, insert.sizeX) +\n            \"x\" +\n            Math.max(insert.sizeY, insert.sizeX) +\n            \":\" +\n            insert.color.ral;\n\n          if (inserts[insertName] == null) {\n            inserts[insertName] = {\n              count: 1,\n              sizeA: Math.min(insert.sizeY, insert.sizeX),\n              color: insert.color,\n              sizeB: Math.max(insert.sizeY, insert.sizeX),\n            };\n          } else {\n            inserts[insertName].count++;\n          }\n        });\n\n      setInsertList(inserts);\n    });\n  }, [boxes]);\n\n  return (\n    <ShoppingListWrapper>\n      <div className=\"pricing-table\">\n        <h2>Boxes</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Count</th>\n              <th>Size</th>\n              <th>Article NR</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(boxList).map((boxId) => {\n              const box = boxList[boxId];\n\n              return (\n                <tr>\n                  <td>{box.count}</td>\n                  <td>{boxId}</td>\n                  <td>{containerNrs[boxId]}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"pricing-table\">\n        <h2>Inserts</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Count</th>\n              <th>Color</th>\n              <th>Size</th>\n              <th>Article NR</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(insertList).map((key) => {\n              const insert = insertList[key];\n              return (\n                <tr>\n                  <td>{insert.count}</td>\n                  <td>{insert.color.ral.toUpperCase()}</td>\n                  <td>\n                    {insert.sizeA}x{insert.sizeB}\n                  </td>\n\n                  <td>\n                    SB E {insert.sizeA}\n                    {insert.sizeB}{\" \"}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </ShoppingListWrapper>\n  );\n};\n\nexport default ShoppingList;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\n\nimport licenses from \"./licenses.json\";\n\nconst About = () => {\n  return (\n    <Container>\n      <h1>Boxomat</h1>\n      <a href=\"\">Github</a>\n      <p>Boxomat helps you plan assortments. </p>\n      <br />\n      <h2>Licensing</h2>\n      <p>Boxomat is licensed under the MIT license. </p>\n\n      <h2>Credits</h2>\n      <ul>\n        {Object.keys(licenses).map((packageName, index) => {\n          return (\n            <li key={index}>\n              <a\n                target=\"_bank\"\n                rel=\"noreferrer\"\n                href={licenses[packageName].repository}\n              >\n                {packageName}\n              </a>{\" \"}\n              &middot; License:{\" \"}\n              <a href={licenses[packageName].licenseUrl}>\n                {licenses[packageName].licenses}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default About;\n","import { Route, Switch, useRouteMatch } from \"react-router\";\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Menu } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport Editor from \"./Editor\";\nimport ShoppingList from \"./ShoppingList\";\nimport About from \"./About\";\nconst MenuLink = ({ path, children, exact }) => {\n  let match = useRouteMatch({\n    path,\n    exact,\n  });\n\n  let history = useHistory();\n\n  return (\n    <Menu.Item onClick={() => history.push(path)} active={match}>\n      {children}\n    </Menu.Item>\n  );\n};\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <BoxPlanner.Provider>\n        <BrowserRouter basename=\"/boxomat\">\n          <Menu inverted fixed=\"top\">\n            <Menu.Item header>Boxomat</Menu.Item>\n            <MenuLink path=\"/\" exact>\n              Editor\n            </MenuLink>\n            <MenuLink path=\"/shopping-list\">Shopping List</MenuLink>\n            <MenuLink path=\"/about\">About</MenuLink>\n          </Menu>\n\n          <Switch>\n            <Route path=\"/\" exact>\n              <Editor />\n            </Route>\n            <Route path=\"/shopping-list\">\n              <ShoppingList></ShoppingList>\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </BoxPlanner.Provider>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}