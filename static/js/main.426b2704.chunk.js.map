{"version":3,"sources":["AppWrapper.js","products.js","BoxPlanner.js","BoxSlot.js","BoxWrapper.js","Insert.js","Box.js","BoxList.js","EditorWrapper.js","InsertEditor.js","InsertList.js","NewBoxModal.js","RepositionWrapper.js","TinyBox.js","RepositionHolder.js","Editor.js","ShoppingList.js","About.js","App.js","reportWebVitals.js","index.js"],"names":["AppWrapper","styled","div","availableSizes","availableColors","hex","ral","containerNrs","BoxPlanner","createContainer","initialState","JSON","parse","localStorage","getItem","useState","boxes","setBoxesState","setBoxes","setItem","stringify","console","log","showAddBox","setShowAddBox","Object","keys","activeBoxId","setActiveBoxId","repositioningInsert","setRepositioning","updateBox","id","box","produce","draft","forBox","render","map","clearInserts","window","confirm","inserts","selectSlot","slot","selectionStart","uuid","sizeX","sizeY","prototype","label","color","updateInsert","boxId","insertId","insert","repositionInsert","deleteBox","cancelReposition","selectInsert","activeInsert","activeBox","getSlots","slots","x","y","selectable","selected","totalSizeX","Math","abs","totalSizeY","biggerSide","max","smallerSide","min","sizeExists","size","push","createBox","product","newBoxId","BoxSlot","props","scale","BoxWrapper","active","repeat","Insert","editing","Box","preview","onClick","useContainer","className","BoxListWrapper","BoxList","Button","EditorWrapper","main","Swatch","InsertEditor","setInsert","newInsert","Form","onSubmit","e","preventDefault","FormField","Input","type","onChange","target","value","length","changeColor","InsertList","insertKey","Card","fluid","Content","Header","isOpened","style","padding","NewBoxModal","setBox","Modal","onClose","onOpen","open","Description","display","justifyContent","Actions","RepositionWrapper","TinyBox","RepositionHolder","flex","Editor","alignItems","flexDirection","primary","ShoppingListWrapper","ShoppingList","insertList","setInsertList","boxList","setBoxList","useEffect","boxCounts","forEach","boxKey","count","sort","a","b","insertName","sizeA","sizeB","key","toUpperCase","About","Container","href","licenses","packageName","index","rel","repository","licenseUrl","MenuLink","path","children","exact","match","useRouteMatch","history","useHistory","Menu","Item","App","Provider","basename","inverted","fixed","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6cAEO,IAAMA,EAAaC,IAAOC,IAAV,K,mDCFjBC,EAAiB,CACrB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAGFC,EAAkB,CACpB,CAAEC,IAAK,UAAWC,IAAK,YACvB,CAAED,IAAK,UAAWC,IAAK,YACvB,CAAED,IAAK,UAAWC,IAAK,YACvB,CAAED,IAAK,UAAWC,IAAK,YACvB,CAAED,IAAK,UAAWC,IAAK,YACvB,CAAED,IAAK,UAAWC,IAAK,aAGrBC,EAAe,CACjB,MAAO,QACP,MAAO,SACP,MAAO,QACP,MAAO,SACP,OAAQ,SCqPKC,EAFEC,aAvQK,WAAO,IAAD,EACpBC,EAAeC,KAAKC,MAAL,UAAWC,aAAaC,QAAQ,oBAAhC,QAAgD,MAD3C,EAGKC,mBAASL,GAHd,mBAGnBM,EAHmB,KAGZC,EAHY,KAKpBC,EAAW,SAACF,GAChBH,aAAaM,QAAQ,YAAaR,KAAKS,UAAUJ,IACjDK,QAAQC,IAAI,WAAYN,GACxBC,EAAcD,IARU,EAWUD,oBAAS,GAXnB,mBAWnBQ,EAXmB,KAWPC,EAXO,OAYYT,mBAC3B,MAATC,EAAgBS,OAAOC,KAAKV,GAAO,GAAK,MAbhB,mBAYnBW,EAZmB,KAYNC,EAZM,OAesBb,mBAAS,MAf/B,mBAenBc,EAfmB,KAeEC,EAfF,KAgCpBC,EAAY,SAACC,EAAIC,GACrBf,EACEgB,YAAQlB,GAAO,SAACmB,GACH,MAAPF,EACFE,EAAMH,GAAMC,SAILE,EAAMH,QAyMrB,MAAO,CACLT,aACAa,OAAQ,SAACC,GAAD,OAAYZ,OAAOC,KAAKV,GAAOsB,KAAI,SAACN,GAAD,OAAQK,EAAOL,EAAIhB,EAAMgB,QACpER,gBACAe,aAlCmB,WACfC,OAAOC,QAAQ,kBACjBvB,EACEgB,YAAQlB,GAAO,SAACmB,GAGd,OAFAA,EAAMR,GAAae,QAAU,GAEtBP,OA6BbQ,WA9GiB,SAACC,GAEQ,MADhB5B,EAAMW,GACRkB,eACN3B,EACEgB,YAAQlB,GAAO,SAACmB,GACd,IAAMH,EAAKc,cAEX,GAA2B,MAAvBjB,GAIAA,EAAoBkB,MAAQlB,EAAoBmB,QAChDJ,EAAKK,UAAUF,MAAQH,EAAKK,UAAUD,OAGnCR,OAAOC,QAAQ,gDAiBtB,OAVAN,EAAMR,GAAae,QAAQV,GAA3B,yBACEkB,MAAO,GACPC,MAAO/C,EAAgB,IACpByB,GACAe,EAAKK,WAEVd,EAAMR,GAAakB,eAAiB,KAEpCf,EAAiB,MAEVK,MAIXjB,EACEgB,YAAQlB,GAAO,SAACmB,GAGd,OAFAA,EAAMR,GAAakB,eAAiBD,EAE7BT,OAuEbiB,aApOmB,SAACC,EAAOC,EAAUC,GACrCrC,EACEgB,YAAQlB,GAAO,SAACmB,GACd,IAAMF,EAAME,EAAMkB,GACJ,MAAVE,EACFtB,EAAIS,QAAQY,GAAYC,SAEjBtB,EAAIS,QAAQY,QA8NzBE,iBAlEuB,SAACF,GACxB,IACIC,EADMvC,EAAMW,GACCe,QAAQY,GAEzBxB,EAAiB,2BAAKyB,GAAN,IAAcF,MAAO1B,EAAa2B,cAElDpC,EACEgB,YAAQlB,GAAO,SAACmB,GAGd,cAFOA,EAAMR,GAAae,QAAQY,GAE3BnB,OAyDXN,sBACA4B,UAbgB,WAChB1B,EAAUJ,EAAa,OAavB+B,iBAtDuB,WACvB,GAA2B,MAAvB7B,EAA6B,CAAC,IACxBwB,EAAoBxB,EAApBwB,MAAOC,EAAazB,EAAbyB,SACfpC,EACEgB,YAAQlB,GAAO,SAACmB,GAGd,OAFAA,EAAMkB,GAAOX,QAAQY,GAAYzB,EAE1BM,MAGXL,EAAiB,QA6CnB6B,aA7BmB,SAAC3B,GAChBhB,EAAMW,GAAaiC,eAAiB5B,GAIxCd,EACEgB,YAAQlB,GAAO,SAACmB,GAGd,OAFAA,EAAMR,GAAaiC,aAAe5B,EAE3BG,OAqBX0B,UAAW7C,EAAMW,GACjBA,cACAmC,SAhMe,SAAC7B,GAKhB,IAJA,IAAI8B,EAAQ,GAEJlB,EAA0CZ,EAA1CY,eAAgBH,EAA0BT,EAA1BS,QAASM,EAAiBf,EAAjBe,MAAOD,EAAUd,EAAVc,MAE/BiB,EAAI,EAAGA,EAAIjB,EAAOiB,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAOiB,IAAK,CAC9B,IAAIrB,EAAO,CACTsB,YAAY,EACZF,IACAC,IACAE,UAAwB,OAAdtB,QAAc,IAAdA,OAAA,EAAAA,EAAgBmB,KAAMA,IAAmB,OAAdnB,QAAc,IAAdA,OAAA,EAAAA,EAAgBoB,KAAMA,GAG7D,GAAsB,MAAlBpB,EAAwB,CAC1B,IAD0B,EACtBuB,EAAaC,KAAKC,IAAIzB,EAAemB,EAAIA,GAAK,EAC9CO,EAAaF,KAAKC,IAAIzB,EAAeoB,EAAIA,GAAK,EAE5CO,EAAaH,KAAKI,IAAIL,EAAYG,GAClCG,EAAcL,KAAKM,IAAIP,EAAYG,GACrCK,GAAa,EANS,cAOTzE,GAPS,IAO1B,2BAAiC,CAAC,IAAzB0E,EAAwB,QAC3BA,EAAK,KAAOL,GAAcK,EAAK,KAAOH,IACxCE,GAAa,IATS,8BAY1BhC,EAAKsB,WAAaU,EAGlB,IAAI3B,EAAY,CACde,EAAGK,KAAKM,IAAI9B,EAAemB,EAAGA,GAC9BC,EAAGI,KAAKM,IAAI9B,EAAeoB,EAAGA,GAC9BlB,MAAOqB,EACPpB,MAAOuB,GAGT3B,EAAKK,UAAYA,EAIjB,cAAqBxB,OAAOC,KAAKgB,GAAjC,eAA2C,CAAtC,IACCa,EAASb,EADE,MAEf,GACEa,EAAOS,EAAIf,EAAUe,EAAIf,EAAUF,OACnCQ,EAAOS,EAAIT,EAAOR,MAAQE,EAAUe,GACpCT,EAAOU,EAAIhB,EAAUgB,EAAIhB,EAAUD,OACnCO,EAAOU,EAAIV,EAAOP,MAAQC,EAAUgB,EACpC,CACArB,EAAKsB,YAAa,EAClB,aAKJ,cAAqBzC,OAAOC,KAAKgB,GAAjC,eAA2C,CAAtC,IACCa,EAASb,EADE,MAEf,GACEsB,GAAKT,EAAOS,GACZA,EAAIT,EAAOS,EAAIT,EAAOR,OACtBkB,GAAKV,EAAOU,GACZA,EAAIV,EAAOU,EAAIV,EAAOP,MACtB,CACAJ,EAAKsB,YAAa,EAClB,OAINH,EAAMe,KAAKlC,GAGf,OAAOmB,GA2HPgB,UAlNgB,SAACC,GACjB,IAAMC,EAAWnC,cACjB5B,EACEgB,YAAQlB,GAAO,SAACmB,GAKd,OAJAA,EAAM8C,GAAN,2BACKD,GADL,IAEEtC,QAAS,KAEJP,MAIXX,GAAc,GAEdI,EAAeqD,IAqMflD,YACAH,iBACAZ,Y,2MCvQG,IAAMkE,EAAUjF,IAAOC,IAAV,KACJ,SAACiF,GACb,OAAIA,EAAMhB,SACD,OAELgB,EAAMjB,WACD,UAEF,aAEQ,SAACiB,GAAD,OAAW,IAAMA,EAAMC,SAGzB,SAACD,GAAD,OAAWA,EAAMnB,EAAI,KACxB,SAACmB,GAAD,OAAWA,EAAMlB,EAAI,K,0vBCd5B,IAAMoB,EAAapF,IAAOC,IAAV,KAEJ,SAACiF,GAAD,OAAWd,KAAKI,IAAI,IAAMU,EAAMC,MAAO,MAE9C,SAACD,GAAD,OAAW,GAAKA,EAAMC,SAGtB,SAACD,GAAD,OAAYA,EAAMG,OAAS,iBAAmB,oBAIxC,SAACH,GAAD,OAAWA,EAAMpC,MAAQoC,EAAMC,SACnC,SAACD,GAAD,OAAWA,EAAMnC,MAAQmC,EAAMC,SAKd,SAACD,GAAD,MACvB,kBAAkBI,OAAOJ,EAAMpC,UACX,SAACoC,GAAD,MAAW,kBAAkBI,OAAOJ,EAAMnC,U,4dCnB/D,IAAMwC,EAASvF,IAAOC,IAAV,KACC,SAACiF,GAAD,OAAWA,EAAMlB,EAAI,KACvB,SAACkB,GAAD,OAAWA,EAAMlB,EAAI,EAAIkB,EAAMnC,SAC1B,SAACmC,GAAD,OAAWA,EAAMnB,EAAI,KACvB,SAACmB,GAAD,OAAWA,EAAMnB,EAAI,EAAImB,EAAMpC,SACpC,SAACoC,GAAD,OAAWA,EAAMhC,MAAM9C,OAEjB,SAAC8E,GAAD,OAAYA,EAAMM,QAAU,OAAS,UASxC,SAACN,GAAD,OAAW,IAAMA,EAAMC,SCiD3BM,EA7DH,SAAC,GAAsC,IAApCzD,EAAmC,EAAnCA,IAAKmD,EAA8B,EAA9BA,MAAOO,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC1B7C,EAA0Bd,EAA1Bc,MAAOC,EAAmBf,EAAnBe,MAAON,EAAYT,EAAZS,QAD0B,EAGDlC,EAAWqF,eAAlD/B,EAHwC,EAGxCA,SAAUnB,EAH8B,EAG9BA,WAAYgB,EAHkB,EAGlBA,aAE9B,OACE,mCACE,cAAC0B,EAAD,CAAYD,MAAOA,EAAOrC,MAAOA,EAAOC,MAAOA,EAA/C,SACE,sBAAK4C,QAASD,EAAUC,EAAU,KAAME,UAAU,UAAlD,UACE,qBAAKA,UAAU,UAAf,SACGhC,EAAS7B,GAAKK,KAAI,SAACM,GAClB,OACE,cAACsC,EAAD,CACElB,EAAGpB,EAAKoB,EACRG,SAAUvB,EAAKuB,SACfiB,MAAOA,EACPQ,QAAS,WACFD,GAAShD,EAAWC,IAE3BsB,WAAYtB,EAAKsB,WACjBD,EAAGrB,EAAKqB,SAKhB,qBAAK6B,UAAU,UAAf,SACGrE,OAAOC,KAAKgB,GAASJ,KAAI,SAACgB,GACzB,IACIJ,EADAK,EAASb,EAAQY,GASrB,OAPKqC,IACHzC,EAAK,UAAMK,EAAOR,MAAb,YAAsBQ,EAAOP,OAC9BO,EAAOL,QACTA,EAAQK,EAAOL,QAKjB,cAACsC,EAAD,yBACEC,QAASnC,IAAarB,EAAI2B,aAC1BwB,MAAOA,EACPQ,QAAS,WACHD,IACArC,IAAarB,EAAI2B,aAIrBD,EAAaL,GAHXK,EAAa,SAKbJ,GAXN,aAaGL,kB,qKClDnB,IAAM6C,EAAiB9F,IAAOC,IAAV,KA6BL8F,EAtBC,WAAO,IAAD,EAC8BxF,EAAWqF,eAArDzD,EADY,EACZA,OAAQR,EADI,EACJA,eAAgBJ,EADZ,EACYA,cAEhC,OACE,eAACuE,EAAD,WACG3D,GAAO,SAACJ,EAAIC,GAAL,OACN,cAAC,EAAD,CACEoB,MAAOrB,EACP4D,QAAS,WACPhE,EAAeI,IAEjB2D,SAAO,EACP1D,IAAKA,EACLmD,MAAO,QAIX,cAACa,EAAA,EAAD,CAAQL,QAAS,kBAAMpE,GAAc,IAArC,yB,2bC5BC,IAAM0E,EAAgBjG,IAAOkG,KAAV,K,2WCMnB,IAAMC,EAASnG,IAAOC,IAAV,KAKG,SAACiF,GAAD,OAAYA,EAAMG,OAAS,OAAS,UAG7C,SAACH,GAAD,OAAYA,EAAMG,OAAS,EAAI,MAE5B,SAACH,GAAD,OAAWA,EAAMhC,MAAM9C,OAyFxBgG,EA/EM,SAAC,GAAkB,IAAhB/C,EAAe,EAAfA,SAAe,EAOjC9C,EAAWqF,eALbhC,EAFmC,EAEnCA,UACAT,EAHmC,EAGnCA,aACAzB,EAJmC,EAInCA,YAEA6B,GANmC,EAKnCG,aALmC,EAMnCH,kBAGID,EAASM,EAAUnB,QAAQY,GAE3BgD,EAAY,SAACC,GAAD,OAChBnD,EAAazB,EAAa2B,EAAUiD,IAoCtC,OACE,eAACC,EAAA,EAAD,CAAMC,SATU,SAACC,GACjBA,EAAEC,kBAQF,UACE,cAACC,EAAA,EAAD,UACE,4CAEF,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,SAvCH,SAACL,GACfA,EAAEM,OAAOC,MAAMC,OAAS,IAG5BZ,EACEpE,YAAQqB,GAAQ,SAACpB,GAEf,OADAA,EAAMe,MAAQwD,EAAEM,OAAOC,MAChB9E,OAgCiC8E,MAAO1D,EAAOL,QACxD,eAAC0D,EAAA,EAAD,WACE,0CAECxG,EAAgBkC,KAAI,SAACa,GACpB,OACE,cAACiD,EAAD,CACEd,OAAQnC,IAAUI,EAAOJ,MACzByC,QAAS,YAnCD,SAACzC,GACnBmD,EACEpE,YAAQqB,GAAQ,SAACpB,GAEf,OADAA,EAAMgB,MAAQA,EACPhB,MAgCCgF,CAAYhE,IAEdA,MAAOA,UAKf,eAACyD,EAAA,EAAD,WACE,cAACX,EAAA,EAAD,CAAQ9C,MAAM,MAAMyC,QAlCL,WACnBU,EAAU,OAiCN,oBAGA,cAACL,EAAA,EAAD,CAAQL,QA7BK,WACjBpC,EAAiBF,IA4Bb,yB,SCtDO8D,EAzCI,WAAO,IAAD,EACa5G,EAAWqF,eAAvChC,EADe,EACfA,UAAWF,EADI,EACJA,aAEnB,OAAKE,EAKH,mCACGpC,OAAOC,KAAKmC,EAAUnB,SAASJ,KAAI,SAAC+E,GACnC,IAAM9D,EAASM,EAAUnB,QAAQ2E,GAE3B/B,EAASzB,EAAUD,eAAiByD,EAE1C,OACE,eAACC,EAAA,EAAD,CAEEC,OAAK,EACL3B,QAAS,WACPjC,EAAa0D,IAJjB,UAOE,cAACC,EAAA,EAAKE,QAAN,UACE,eAACF,EAAA,EAAKG,OAAN,kBACGlE,QADH,IACGA,OADH,EACGA,EAAQR,MADX,WACmBQ,QADnB,IACmBA,OADnB,EACmBA,EAAQP,MAD3B,aACqCO,QADrC,IACqCA,OADrC,EACqCA,EAAQL,MAC3C,uBACA,uCAAQK,QAAR,IAAQA,OAAR,EAAQA,EAAQJ,MAAM7C,WAG1B,cAAC,WAAD,CAAUoH,SAAUpC,EAApB,SACE,qBAAKqC,MAAO,CAAEC,QAAS,QAAvB,SACE,cAAC,EAAD,CAActE,SAAU+D,UAfvBA,QAZN,yB,SC8CIQ,EAnDK,WAAO,IAAD,EACyBrH,EAAWqF,eAApDd,EADgB,EAChBA,UAAWxD,EADK,EACLA,WAAYC,EADP,EACOA,cADP,EAGFT,mBAAS,CAAEgC,MAAO,EAAGC,MAAO,IAH1B,mBAGjBf,EAHiB,KAGZ6F,EAHY,KAaxB,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMxG,GAAc,IAC7ByG,OAAQ,kBAAMzG,GAAc,IAC5B0G,KAAM3G,EAHR,UAKE,cAACwG,EAAA,EAAMN,OAAP,gCACA,cAACM,EAAA,EAAMP,QAAP,UACE,eAACO,EAAA,EAAMI,YAAP,WACE,qBAAKR,MAAO,CAAES,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,EAAD,CAAKpG,IAAG,2BAAOA,GAAP,IAAYS,QAAS,KAAM0C,MAAO,MAE5C,qBAAKuC,MAAO,CAAES,QAAS,OAAQC,eAAgB,UAA/C,SApBM,CACZ,CAAEtF,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,GAAIC,MAAO,IAgBLV,KAAI,SAACuC,GACV,OACE,eAACoB,EAAA,EAAD,CACEL,QAAS,kBAAMkC,EAAOjD,IACtBS,OAAQT,EAAK9B,QAAUd,EAAIc,OAAS8B,EAAK7B,QAAUf,EAAIe,MAFzD,UAIG6B,EAAK9B,MAJR,IAIgB8B,EAAK7B,mBAO/B,eAAC+E,EAAA,EAAMO,QAAP,WACE,cAACrC,EAAA,EAAD,CAAQ9C,MAAM,QAAQyC,QAAS,kBAAMpE,GAAc,IAAnD,oBAGA,cAACyE,EAAA,EAAD,CAAQ9C,MAAM,UAAUyC,QAAS,kBAAMb,EAAU9C,IAAjD,2B,+VC9CD,IAAMsG,EAAoBtI,IAAOC,IAAV,KAab,SAACiF,GAAD,OAAYA,EAAMG,OAAS,MAAQ,U,uJCb7C,IAAMkD,EAAUvI,IAAOC,IAAV,KACR,SAACiF,GAAD,OAAyB,EAAdA,EAAMnC,SAClB,SAACmC,GAAD,OAAyB,EAAdA,EAAMpC,SACZ,SAACoC,GAAD,uBAAWA,EAAMhC,aAAjB,aAAW,EAAa9C,OCC3BoI,EAAmB,WAAO,IAAD,IACcjI,EAAWqF,eAArDhE,EAD4B,EAC5BA,oBAAqB6B,EADO,EACPA,iBAEzBR,EAAK,iBAAGrB,QAAH,IAAGA,OAAH,EAAGA,EAAqBqB,aAAxB,QAAiC,GAI1C,OAFA7B,QAAQC,IAAIO,GAGV,eAAC0G,EAAD,CAAmBjD,OAA+B,MAAvBzD,EAA3B,UACE,sBAAK8F,MAAO,CAAEe,KAAM,GAApB,UACE,uCAEA,uBACA,+BAAwB,IAAjBxF,EAAMgE,OAAe,WAAahE,IACzC,uBACA,0DACkBrB,QADlB,IACkBA,OADlB,EACkBA,EAAqBkB,MADvC,WAEGlB,QAFH,IAEGA,OAFH,EAEGA,EAAqBmB,SAExB,uBACA,uBACA,cAACiD,EAAA,EAAD,CAAQL,QAAS,kBAAMlC,KAAvB,uBAGF,cAAC8E,EAAD,eAAa3G,QCqDJ8G,GAzEA,WAAO,IAAD,EACO5H,mBAAS,GADhB,mBACZqE,EADY,aAWf5E,EAAWqF,gBAPbhC,EAJiB,EAIjBA,UACA7C,EALiB,EAKjBA,MACAe,EANiB,EAMjBA,UACAP,EAPiB,EAOjBA,cACAG,EARiB,EAQjBA,YACA8B,EATiB,EASjBA,UACAlB,EAViB,EAUjBA,aAGF,OAAkC,IAA9Bd,OAAOC,KAAKV,GAAOkG,OAEnB,sBACES,MAAO,CACLS,QAAS,OACTM,KAAM,EACNE,WAAY,SACZC,cAAe,SACfR,eAAgB,UANpB,UASE,cAAC,EAAD,IACA,0DACA,cAACpC,EAAA,EAAD,CAAQ6C,SAAO,EAAClD,QAAS,kBAAMpE,GAAc,IAA7C,sCAQJ,qCACE,cAAC,EAAD,IACA,eAAC0E,EAAD,WACE,cAAC,EAAD,IAEA,sBAAKJ,UAAU,SAAf,UACgB,MAAbjC,EACC,cAAC,EAAD,CACE9B,UAAW,SAACE,GAAD,OAASF,EAAU8B,EAAW5B,IACzCqD,QAAM,EACNF,MAAOA,EACP/B,MAAO1B,EACPM,IAAK4B,IAEL,KAEJ,cAAC,EAAD,OAEF,sBAAKiC,UAAU,YAAf,UACE,8CACQjC,QADR,IACQA,OADR,EACQA,EAAWd,MADnB,WAC2Bc,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAWb,MADtC,MAEY,OAATa,QAAS,IAATA,OAAA,EAAAA,EAAWd,QAAX,OAAmBc,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAWb,OAFjC,aAKA,yCACA,cAAC,EAAD,IAEA,cAACiD,EAAA,EAAD,CAAQ9C,MAAM,MAAMyC,QAASrD,EAA7B,2BAGA,cAAC0D,EAAA,EAAD,CAAQ9C,MAAM,MAAMyC,QAASnC,EAA7B,kC,8jBCrEV,IAAMsF,GAAsB9I,IAAOkG,KAAV,MAgJV6C,GAhHM,WAAO,IAClBhI,EAAUR,EAAWqF,eAArB7E,MADiB,EAGWD,mBAAS,IAHpB,mBAGlBkI,EAHkB,KAGNC,EAHM,OAIKnI,mBAAS,IAJd,mBAIlBoI,EAJkB,KAITC,EAJS,KAiDzB,OA3CAC,qBAAU,WACR,IAAI3G,EAAU,GACV4G,EAAY,GAEhB7H,OAAOC,KAAKV,GAAOuI,SAAQ,SAAClG,GAC1B,IAAIpB,EAAMjB,EAAMqC,GACVmG,EAASvH,EAAIc,MAAQ,IAAMd,EAAIe,MACZ,MAArBsG,EAAUE,GACZF,EAAUE,GAAV,aAAsBC,MAAO,GAAMxH,GAEnCqH,EAAUE,GAAQC,QAGpBL,EAAWE,GAEX7H,OAAOC,KAAKO,EAAIS,SACbJ,KAAI,SAACgB,GAAD,OAAcrB,EAAIS,QAAQY,MAC9BoG,MAAK,SAACC,EAAGC,GAAJ,OAAUvF,KAAKM,IAAIgF,EAAE3G,MAAO2G,EAAE5G,OAASsB,KAAKM,IAAIiF,EAAE5G,MAAO4G,EAAE7G,UAChE2G,MAAK,SAACC,EAAGC,GAAJ,OAAUvF,KAAKI,IAAIkF,EAAE3G,MAAO2G,EAAE5G,OAASsB,KAAKI,IAAImF,EAAE5G,MAAO4G,EAAE7G,UAChEwG,SAAQ,SAAChG,GACR,IAAMsG,EACJxF,KAAKM,IAAIpB,EAAOP,MAAOO,EAAOR,OAC9B,IACAsB,KAAKI,IAAIlB,EAAOP,MAAOO,EAAOR,OAC9B,IACAQ,EAAOJ,MAAM7C,IAEY,MAAvBoC,EAAQmH,GACVnH,EAAQmH,GAAc,CACpBJ,MAAO,EACPK,MAAOzF,KAAKM,IAAIpB,EAAOP,MAAOO,EAAOR,OACrCI,MAAOI,EAAOJ,MACd4G,MAAO1F,KAAKI,IAAIlB,EAAOP,MAAOO,EAAOR,QAGvCL,EAAQmH,GAAYJ,WAI1BP,EAAcxG,QAEf,CAAC1B,IAGF,eAAC+H,GAAD,WACE,sBAAKjD,UAAU,gBAAf,UACE,uCACA,kCACE,gCACE,+BACE,uCACA,sCACA,iDAGJ,gCACGrE,OAAOC,KAAKyH,GAAS7G,KAAI,SAACe,GACzB,IAAMpB,EAAMkH,EAAQ9F,GAEpB,OACE,+BACE,6BAAKpB,EAAIwH,QACT,6BAAKpG,IACL,6BAAK9C,EAAa8C,mBAO9B,sBAAKyC,UAAU,gBAAf,UACE,yCACA,kCACE,gCACE,+BACE,uCACA,uCACA,sCACA,iDAGJ,gCACGrE,OAAOC,KAAKuH,GAAY3G,KAAI,SAAC0H,GAC5B,IAAMzG,EAAS0F,EAAWe,GAC1B,OACE,+BACE,6BAAKzG,EAAOkG,QACZ,6BAAKlG,EAAOJ,MAAM7C,IAAI2J,gBACtB,+BACG1G,EAAOuG,MADV,IACkBvG,EAAOwG,SAGzB,uCACQxG,EAAOuG,MACZvG,EAAOwG,MAAO,yB,mBClGpBG,GAlCD,WACZ,OACE,eAACC,GAAA,EAAD,WACE,yCACA,mBAAGC,KAAK,4CAAR,oBACA,qEACA,uBACA,2CACA,4EAEA,yCACA,6BACG3I,OAAOC,KAAK2I,IAAU/H,KAAI,SAACgI,EAAaC,GACvC,OACE,+BACE,mBACEvD,OAAO,QACPwD,IAAI,aACJJ,KAAMC,GAASC,GAAaG,WAH9B,SAKGH,IACE,IAPP,gBAQoB,IAClB,mBAAGF,KAAMC,GAASC,GAAaI,WAA/B,SACGL,GAASC,GAAaD,aAVlBE,YCTfI,GAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9BC,EAAQC,YAAc,CACxBJ,OACAE,UAGEG,EAAUC,cAEd,OACE,cAACC,EAAA,EAAKC,KAAN,CAAWxF,QAAS,kBAAMqF,EAAQnG,KAAK8F,IAAOtF,OAAQyF,EAAtD,SACGF,KAoCQQ,OA/Bf,WACE,OACE,cAACrL,EAAD,UACE,cAAC,EAAWsL,SAAZ,UACE,eAAC,IAAD,CAAeC,SAAS,WAAxB,UACE,eAACJ,EAAA,EAAD,CAAMK,UAAQ,EAACC,MAAM,MAArB,UACE,cAACN,EAAA,EAAKC,KAAN,CAAWM,QAAM,EAAjB,qBACA,cAAC,GAAD,CAAUd,KAAK,IAAIE,OAAK,EAAxB,oBAGA,cAAC,GAAD,CAAUF,KAAK,iBAAf,2BACA,cAAC,GAAD,CAAUA,KAAK,SAAf,sBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAK,IAAIE,OAAK,EAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,iBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,iBCnCCe,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS/J,OACP,cAAC,IAAMgK,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.426b2704.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  box-sizing: border-box;\n  padding-top: 40px;\n  flex-direction: column;\n  height: 100vh;\n`;\n","const availableSizes = [\n  [1, 1],\n  [2, 1],\n  [3, 1],\n  [4, 1],\n  [5, 1],\n  [2, 2],\n  [3, 2],\n  [5, 2],\n  [6, 2],\n];\n\nlet availableColors = [\n  { hex: \"#f3be38\", ral: \"RAL 1003\" },\n  { hex: \"#d81a21\", ral: \"RAL 3020\" },\n  { hex: \"#007cb6\", ral: \"RAL 5015\" },\n  { hex: \"#48A43F\", ral: \"RAL 6018\" },\n  { hex: \"#999999\", ral: \"RAL 7001\" },\n  { hex: \"#383e42\", ral: \"RAL 7016\" },\n];\n\nlet containerNrs = {\n  \"5x3\": \"SB 32\",\n  \"6x5\": \"SB 353\",\n  \"7x5\": \"SB 43\",\n  \"8x6\": \"SB 443\",\n  \"11x7\": \"SB 64\",\n};\n\nexport { availableSizes, availableColors, containerNrs };\n","import { createContainer } from \"unstated-next\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport produce from \"immer\";\nimport { availableColors, availableSizes } from \"./products\";\n\nconst useBoxPlanner = () => {\n  const initialState = JSON.parse(localStorage.getItem(\"app-state\") ?? \"{}\");\n\n  const [boxes, setBoxesState] = useState(initialState);\n\n  const setBoxes = (boxes) => {\n    localStorage.setItem(\"app-state\", JSON.stringify(boxes));\n    console.log(\"setBoxes\", boxes);\n    setBoxesState(boxes);\n  };\n\n  const [showAddBox, setShowAddBox] = useState(false);\n  const [activeBoxId, setActiveBoxId] = useState(\n    boxes != null ? Object.keys(boxes)[0] : null\n  );\n  const [repositioningInsert, setRepositioning] = useState(null);\n\n  // Update the box with the given id.\n\n  const updateInsert = (boxId, insertId, insert) => {\n    setBoxes(\n      produce(boxes, (draft) => {\n        const box = draft[boxId];\n        if (insert != null) {\n          box.inserts[insertId] = insert;\n        } else {\n          delete box.inserts[insertId];\n        }\n      })\n    );\n  };\n\n  const updateBox = (id, box) => {\n    setBoxes(\n      produce(boxes, (draft) => {\n        if (box != null) {\n          draft[id] = box;\n        } else {\n          // Delete if null\n\n          delete draft[id];\n        }\n      })\n    );\n  };\n  // Create a new box\n  const createBox = (product) => {\n    const newBoxId = uuid();\n    setBoxes(\n      produce(boxes, (draft) => {\n        draft[newBoxId] = {\n          ...product,\n          inserts: {},\n        };\n        return draft;\n      })\n    );\n    // Hide the modal\n    setShowAddBox(false);\n    // Select the box\n    setActiveBoxId(newBoxId);\n  };\n\n  const getSlots = (box) => {\n    let slots = [];\n\n    const { selectionStart, inserts, sizeY, sizeX } = box;\n\n    for (let x = 0; x < sizeX; x++) {\n      for (let y = 0; y < sizeY; y++) {\n        let slot = {\n          selectable: true,\n          x,\n          y,\n          selected: selectionStart?.x === x && selectionStart?.y === y,\n        };\n        // If the user already started a selection determine selection\n        if (selectionStart != null) {\n          let totalSizeX = Math.abs(selectionStart.x - x) + 1;\n          let totalSizeY = Math.abs(selectionStart.y - y) + 1;\n\n          const biggerSide = Math.max(totalSizeX, totalSizeY);\n          const smallerSide = Math.min(totalSizeX, totalSizeY);\n          let sizeExists = false;\n          for (var size of availableSizes) {\n            if (size[0] === biggerSide && size[1] === smallerSide) {\n              sizeExists = true;\n            }\n          }\n          slot.selectable = sizeExists;\n\n          // Insert that would be generated if the user selected this insert now.\n          let prototype = {\n            x: Math.min(selectionStart.x, x),\n            y: Math.min(selectionStart.y, y),\n            sizeX: totalSizeX,\n            sizeY: totalSizeY,\n          };\n\n          slot.prototype = prototype;\n\n          // Now determine if the prototype would collide with existing inserts\n\n          for (let insertId of Object.keys(inserts)) {\n            let insert = inserts[insertId];\n            if (\n              insert.x < prototype.x + prototype.sizeX &&\n              insert.x + insert.sizeX > prototype.x &&\n              insert.y < prototype.y + prototype.sizeY &&\n              insert.y + insert.sizeY > prototype.y\n            ) {\n              slot.selectable = false;\n              break;\n            }\n          }\n        } else {\n          // No selection was started. So just sort out slots that are already occupied by inserts\n          for (let insertId of Object.keys(inserts)) {\n            let insert = inserts[insertId];\n            if (\n              x >= insert.x &&\n              x < insert.x + insert.sizeX &&\n              y >= insert.y &&\n              y < insert.y + insert.sizeY\n            ) {\n              slot.selectable = false;\n              break;\n            }\n          }\n        }\n        slots.push(slot);\n      }\n    }\n    return slots;\n  };\n\n  const selectSlot = (slot) => {\n    let box = boxes[activeBoxId];\n    if (box.selectionStart != null) {\n      setBoxes(\n        produce(boxes, (draft) => {\n          const id = uuid();\n\n          if (repositioningInsert != null) {\n            // Check size\n\n            if (\n              repositioningInsert.sizeX * repositioningInsert.sizeY !==\n              slot.prototype.sizeX * slot.prototype.sizeY\n            ) {\n              if (\n                !window.confirm(\"Your new box has a different size. Continue?\")\n              ) {\n                return;\n              }\n            }\n          }\n\n          draft[activeBoxId].inserts[id] = {\n            label: \"\",\n            color: availableColors[0],\n            ...repositioningInsert,\n            ...slot.prototype,\n          };\n          draft[activeBoxId].selectionStart = null;\n\n          setRepositioning(null);\n\n          return draft;\n        })\n      );\n    } else {\n      setBoxes(\n        produce(boxes, (draft) => {\n          draft[activeBoxId].selectionStart = slot;\n\n          return draft;\n        })\n      );\n    }\n  };\n\n  const repositionInsert = (insertId) => {\n    let box = boxes[activeBoxId];\n    let insert = box.inserts[insertId];\n\n    setRepositioning({ ...insert, boxId: activeBoxId, insertId });\n\n    setBoxes(\n      produce(boxes, (draft) => {\n        delete draft[activeBoxId].inserts[insertId];\n\n        return draft;\n      })\n    );\n  };\n\n  const cancelReposition = () => {\n    if (repositioningInsert != null) {\n      const { boxId, insertId } = repositioningInsert;\n      setBoxes(\n        produce(boxes, (draft) => {\n          draft[boxId].inserts[insertId] = repositioningInsert;\n\n          return draft;\n        })\n      );\n      setRepositioning(null);\n    }\n  };\n\n  const clearInserts = () => {\n    if (window.confirm(\"Are you sure?\")) {\n      setBoxes(\n        produce(boxes, (draft) => {\n          draft[activeBoxId].inserts = {};\n\n          return draft;\n        })\n      );\n    }\n  };\n\n  const selectInsert = (id) => {\n    if (boxes[activeBoxId].activeInsert === id) {\n      return;\n    }\n\n    setBoxes(\n      produce(boxes, (draft) => {\n        draft[activeBoxId].activeInsert = id;\n\n        return draft;\n      })\n    );\n  };\n\n  const deleteBox = () => {\n    updateBox(activeBoxId, null);\n  };\n\n  return {\n    showAddBox,\n    forBox: (render) => Object.keys(boxes).map((id) => render(id, boxes[id])),\n    setShowAddBox,\n    clearInserts,\n    selectSlot,\n    updateInsert,\n    repositionInsert,\n    repositioningInsert,\n    deleteBox,\n    cancelReposition,\n    selectInsert,\n    activeBox: boxes[activeBoxId],\n    activeBoxId,\n    getSlots,\n    createBox,\n    updateBox,\n    setActiveBoxId,\n    boxes,\n  };\n};\n\nlet BoxPlanner = createContainer(useBoxPlanner);\n\nexport default BoxPlanner;\n","import styled from \"styled-components\";\n\nexport const BoxSlot = styled.div`\n  background: ${(props) => {\n    if (props.selected) {\n      return \"#aaa\";\n    }\n    if (props.selectable) {\n      return \"#dadada\";\n    }\n    return \"#fafafa\";\n  }};\n  border-radius: ${(props) => 1.5 * props.scale}px;\n  transition: all 0.2s ease-in-out;\n\n  grid-column: ${(props) => props.x + 1};\n  grid-row: ${(props) => props.y + 1};\n`;\n","import styled from \"styled-components\";\n\nexport const BoxWrapper = styled.div`\n  background: #fff;\n  border-radius: ${(props) => Math.max(1.5 * props.scale, 4)}px;\n  display: flex;\n  margin: ${(props) => 10 * props.scale}px;\n  flex-direction: column;\n  padding: 1rem;\n  border: ${(props) => (props.active ? \"1px solid #000\" : \"1px solid #ddd\")};\n\n  .content {\n    position: relative;\n    width: calc(${(props) => props.sizeX * props.scale}vw);\n    height: ${(props) => props.sizeY * props.scale}vw;\n    > div {\n      position: absolute;\n      display: grid;\n      grid-gap: 5px;\n      grid-template-columns: ${(props) =>\n        \"minmax(0, 1fr) \".repeat(props.sizeX)};\n      grid-template-rows: ${(props) => \"minmax(0, 1fr) \".repeat(props.sizeY)};\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .inserts {\n      pointer-events: none;\n      > div {\n        pointer-events: all;\n      }\n    }\n  }\n\n  small {\n    text-align: center;\n    color: #ddd;\n    display: block;\n  }\n  .inserts {\n    display: grid;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Insert = styled.div`\n  grid-row-start: ${(props) => props.y + 1};\n  grid-row-end: ${(props) => props.y + 1 + props.sizeY};\n  grid-column-start: ${(props) => props.x + 1};\n  grid-column-end: ${(props) => props.x + 1 + props.sizeX};\n  background: ${(props) => props.color.hex};\n  opacity: 1;\n  border: 2px solid ${(props) => (props.editing ? \"#000\" : \"#ddd\")};\n  display: flex;\n  overflow: hidden;\n  transition: all 0.3s ease-in-out;\n  align-items: center;\n  text-align: center;\n  color: #fff;\n  justify-content: center;\n  /*box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.8);*/\n  border-radius: ${(props) => 1.5 * props.scale}px;\n`;\n","import React from \"react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { BoxSlot } from \"./BoxSlot\";\nimport { BoxWrapper } from \"./BoxWrapper\";\nimport { Insert } from \"./Insert\";\n\nconst Box = ({ box, scale, preview, onClick }) => {\n  const { sizeX, sizeY, inserts } = box;\n\n  const { getSlots, selectSlot, selectInsert } = BoxPlanner.useContainer();\n\n  return (\n    <>\n      <BoxWrapper scale={scale} sizeX={sizeX} sizeY={sizeY}>\n        <div onClick={preview ? onClick : null} className=\"content\">\n          <div className=\"inserts\">\n            {getSlots(box).map((slot) => {\n              return (\n                <BoxSlot\n                  x={slot.x}\n                  selected={slot.selected}\n                  scale={scale}\n                  onClick={() => {\n                    if (!preview) selectSlot(slot);\n                  }}\n                  selectable={slot.selectable}\n                  y={slot.y}\n                ></BoxSlot>\n              );\n            })}\n          </div>\n          <div className=\"inserts\">\n            {Object.keys(inserts).map((insertId) => {\n              let insert = inserts[insertId];\n              let label;\n              if (!preview) {\n                label = `${insert.sizeX}x${insert.sizeY}`;\n                if (insert.label) {\n                  label = insert.label;\n                }\n              }\n\n              return (\n                <Insert\n                  editing={insertId === box.activeInsert}\n                  scale={scale}\n                  onClick={() => {\n                    if (preview) return;\n                    if (insertId === box.activeInsert) {\n                      selectInsert(null);\n                      return;\n                    }\n                    selectInsert(insertId);\n                  }}\n                  {...insert}\n                >\n                  {label}\n                </Insert>\n              );\n            })}\n          </div>\n        </div>\n      </BoxWrapper>\n    </>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport Box from \"./Box\";\nimport styled from \"styled-components\";\nimport { Button } from \"semantic-ui-react\";\n\nconst BoxListWrapper = styled.div`\n  border-bottom: 1px solid #ddd;\n  padding: 1rem;\n  align-items: center;\n  display: flex;\n`;\n\nconst BoxList = () => {\n  const { forBox, setActiveBoxId, setShowAddBox } = BoxPlanner.useContainer();\n\n  return (\n    <BoxListWrapper>\n      {forBox((id, box) => (\n        <Box\n          boxId={id}\n          onClick={() => {\n            setActiveBoxId(id);\n          }}\n          preview\n          box={box}\n          scale={0.5}\n        />\n      ))}\n\n      <Button onClick={() => setShowAddBox(true)}>Add box</Button>\n    </BoxListWrapper>\n  );\n};\n\nexport default BoxList;\n","import styled from \"styled-components\";\n\nexport const EditorWrapper = styled.main`\n  flex: 1;\n  min-height: 0;\n  display: flex;\n\n  .editor {\n    display: flex;\n    position: relative;\n    overflow: hidden;\n    align-items: center;\n    flex: 1;\n\n    justify-content: center;\n    background: #fafafa;\n  }\n  .inspector {\n    min-width: 30%;\n    height: 100%;\n    overflow-y: auto;\n    padding: 1rem;\n    border-left: 1px solid #ddd;\n  }\n`;\n","import produce from \"immer\";\nimport React from \"react\";\nimport { Button, Form, FormField, Input } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { availableColors } from \"./products\";\n\n// Color selection box\nexport const Swatch = styled.div`\n  display: inline-block;\n  width: 32px;\n  border-radius: 4px;\n  height: 32px;\n  border: 1px solid ${(props) => (props.active ? \"#000\" : \"#ddd\")};\n  margin: 5px;\n  transition: opacity 0.2s ease-in-out;\n  opacity: ${(props) => (props.active ? 1 : 0.5)};\n  cursor: pointer;\n  background: ${(props) => props.color.hex};\n  &:hover {\n    opacity: 1;\n  }\n`;\n\n// Available colors\n\n// Insert editor allows the user to modify the properties of a box insert.\n\nconst InsertEditor = ({ insertId }) => {\n  const {\n    activeBox,\n    updateInsert,\n    activeBoxId,\n    selectInsert,\n    repositionInsert,\n  } = BoxPlanner.useContainer();\n\n  const insert = activeBox.inserts[insertId];\n\n  const setInsert = (newInsert) =>\n    updateInsert(activeBoxId, insertId, newInsert);\n\n  const changeLabel = (e) => {\n    if (e.target.value.length > 24) {\n      return;\n    }\n    setInsert(\n      produce(insert, (draft) => {\n        draft.label = e.target.value;\n        return draft;\n      })\n    );\n  };\n\n  const changeColor = (color) => {\n    setInsert(\n      produce(insert, (draft) => {\n        draft.color = color;\n        return draft;\n      })\n    );\n  };\n\n  // Updating with value of null deletes the insert\n  const deleteInsert = () => {\n    setInsert(null);\n  };\n\n  const submitted = (e) => {\n    e.preventDefault();\n  };\n\n  const reposition = () => {\n    repositionInsert(insertId);\n  };\n\n  return (\n    <Form onSubmit={submitted}>\n      <FormField>\n        <label>Label</label>\n      </FormField>\n      <Input type=\"text\" onChange={changeLabel} value={insert.label} />\n      <FormField>\n        <label>Color</label>\n\n        {availableColors.map((color) => {\n          return (\n            <Swatch\n              active={color === insert.color}\n              onClick={() => {\n                changeColor(color);\n              }}\n              color={color}\n            />\n          );\n        })}\n      </FormField>\n      <FormField>\n        <Button color=\"red\" onClick={deleteInsert}>\n          Remove\n        </Button>\n        <Button onClick={reposition}>Move</Button>\n      </FormField>\n    </Form>\n  );\n};\n\nexport default InsertEditor;\n","import { Card } from \"semantic-ui-react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport InsertEditor from \"./InsertEditor\";\n\nimport { Collapse } from \"react-collapse\";\n\nconst InsertList = () => {\n  const { activeBox, selectInsert } = BoxPlanner.useContainer();\n\n  if (!activeBox) {\n    return <div />;\n  }\n\n  return (\n    <>\n      {Object.keys(activeBox.inserts).map((insertKey) => {\n        const insert = activeBox.inserts[insertKey];\n\n        const active = activeBox.activeInsert === insertKey;\n\n        return (\n          <Card\n            key={insertKey}\n            fluid\n            onClick={() => {\n              selectInsert(insertKey);\n            }}\n          >\n            <Card.Content>\n              <Card.Header>\n                {insert?.sizeX}x{insert?.sizeY} - {insert?.label}\n                <br />\n                <small>{insert?.color.ral}</small>\n              </Card.Header>\n            </Card.Content>\n            <Collapse isOpened={active}>\n              <div style={{ padding: \"1rem\" }}>\n                <InsertEditor insertId={insertKey} />\n              </div>\n            </Collapse>\n          </Card>\n        );\n      })}\n    </>\n  );\n};\n\nexport default InsertList;\n","import { useState } from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport Box from \"./Box\";\nimport BoxPlanner from \"./BoxPlanner\";\n\nconst NewBoxModal = () => {\n  const { createBox, showAddBox, setShowAddBox } = BoxPlanner.useContainer();\n\n  const [box, setBox] = useState({ sizeX: 5, sizeY: 3 });\n\n  const sizes = [\n    { sizeX: 5, sizeY: 3 },\n    { sizeX: 6, sizeY: 5 },\n    { sizeX: 7, sizeY: 5 },\n    { sizeX: 8, sizeY: 6 },\n    { sizeX: 11, sizeY: 7 },\n  ];\n\n  return (\n    <Modal\n      onClose={() => setShowAddBox(false)}\n      onOpen={() => setShowAddBox(true)}\n      open={showAddBox}\n    >\n      <Modal.Header>Select a box size</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Box box={{ ...box, inserts: [] }} scale={1}></Box>\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {sizes.map((size) => {\n              return (\n                <Button\n                  onClick={() => setBox(size)}\n                  active={size.sizeX === box.sizeX && size.sizeY === box.sizeY}\n                >\n                  {size.sizeX}x{size.sizeY}\n                </Button>\n              );\n            })}\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setShowAddBox(false)}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={() => createBox(box)}>\n          Create\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default NewBoxModal;\n","import styled from \"styled-components\";\n\nexport const RepositionWrapper = styled.div`\n  width: 20vw;\n\n  background: #fff;\n  box-shadow: 0 0 32px rgba(0, 0, 0, 0.2);\n  padding: 4rem;\n  border-radius: 16px;\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  display: flex;\n  transition: 0.2s ease-in-out;\n  transform: translateX(-50%)\n    translateY(${(props) => (props.active ? \"10%\" : \"120%\")});\n`;\n","import styled from \"styled-components\";\n\nexport const TinyBox = styled.div`\n  height: ${(props) => props.sizeY * 2}rem;\n  width: ${(props) => props.sizeX * 2}rem;\n  background: ${(props) => props.color?.hex};\n  border-radius: 4px;\n`;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { RepositionWrapper } from \"./RepositionWrapper\";\nimport { TinyBox } from \"./TinyBox\";\n\nexport const RepositionHolder = () => {\n  const { repositioningInsert, cancelReposition } = BoxPlanner.useContainer();\n\n  let label = repositioningInsert?.label ?? \"\";\n\n  console.log(repositioningInsert);\n\n  return (\n    <RepositionWrapper active={repositioningInsert != null}>\n      <div style={{ flex: 1 }}>\n        <b>Moving</b>\n\n        <br />\n        <span>{label.length === 0 ? \"No label\" : label}</span>\n        <br />\n        <span>\n          Original size: {repositioningInsert?.sizeX}x\n          {repositioningInsert?.sizeY}\n        </span>\n        <br />\n        <br />\n        <Button onClick={() => cancelReposition()}>Cancel</Button>\n      </div>\n\n      <TinyBox {...repositioningInsert} />\n    </RepositionWrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport Box from \"./Box\";\nimport BoxList from \"./BoxList\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport { EditorWrapper } from \"./EditorWrapper\";\nimport InsertList from \"./InsertList\";\nimport NewBoxModal from \"./NewBoxModal\";\nimport { RepositionHolder } from \"./RepositionHolder\";\n\nconst Editor = () => {\n  const [scale, setScale] = useState(3);\n\n  const {\n    activeBox,\n    boxes,\n    updateBox,\n    setShowAddBox,\n    activeBoxId,\n    deleteBox,\n    clearInserts,\n  } = BoxPlanner.useContainer();\n\n  if (Object.keys(boxes).length === 0) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <NewBoxModal />\n        <p>You don't have a box yet.</p>\n        <Button primary onClick={() => setShowAddBox(true)}>\n          Create your first box\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <BoxList></BoxList>\n      <EditorWrapper>\n        <NewBoxModal />\n\n        <div className=\"editor\">\n          {activeBox != null ? (\n            <Box\n              updateBox={(box) => updateBox(activeBox, box)}\n              active\n              scale={scale}\n              boxId={activeBoxId}\n              box={activeBox}\n            ></Box>\n          ) : null}\n\n          <RepositionHolder />\n        </div>\n        <div className=\"inspector\">\n          <h2>\n            Box: {activeBox?.sizeX}x{activeBox?.sizeY} (\n            {activeBox?.sizeX * activeBox?.sizeY} slots)\n          </h2>\n\n          <h3>Inserts</h3>\n          <InsertList />\n\n          <Button color=\"red\" onClick={clearInserts}>\n            Clear inserts\n          </Button>\n          <Button color=\"red\" onClick={deleteBox}>\n            Delete box\n          </Button>\n        </div>\n      </EditorWrapper>\n    </>\n  );\n};\n\nexport default Editor;\n","import React, { useEffect, useState } from \"react\";\nimport { containerNrs } from \"./products\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport styled from \"styled-components\";\n\nconst ShoppingListWrapper = styled.main`\n  padding: 5rem 10vw;\n\n  .pricing-table {\n    border: 1px solid #ddd;\n    margin: 1rem 0;\n    padding: 1rem;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  }\n\n  table {\n    overflow: hidden;\n    thead {\n      tr {\n        border-bottom: 2px solid #ddd;\n      }\n    }\n    border-collapse: collapse;\n    tr {\n      border-bottom: 1px solid #ddd;\n    }\n    td {\n      padding: 0.5rem;\n    }\n    width: 100%;\n    th {\n      text-align: left;\n    }\n  }\n`;\n\nconst ShoppingList = () => {\n  const { boxes } = BoxPlanner.useContainer();\n\n  const [insertList, setInsertList] = useState({});\n  const [boxList, setBoxList] = useState({});\n\n  useEffect(() => {\n    let inserts = {};\n    let boxCounts = {};\n\n    Object.keys(boxes).forEach((boxId) => {\n      let box = boxes[boxId];\n      const boxKey = box.sizeX + \"x\" + box.sizeY;\n      if (boxCounts[boxKey] == null) {\n        boxCounts[boxKey] = { count: 1, ...box };\n      } else {\n        boxCounts[boxKey].count++;\n      }\n\n      setBoxList(boxCounts);\n\n      Object.keys(box.inserts)\n        .map((insertId) => box.inserts[insertId])\n        .sort((a, b) => Math.min(a.sizeY, a.sizeX) - Math.min(b.sizeY, b.sizeX))\n        .sort((a, b) => Math.max(a.sizeY, a.sizeX) - Math.max(b.sizeY, b.sizeX))\n        .forEach((insert) => {\n          const insertName =\n            Math.min(insert.sizeY, insert.sizeX) +\n            \"x\" +\n            Math.max(insert.sizeY, insert.sizeX) +\n            \":\" +\n            insert.color.ral;\n\n          if (inserts[insertName] == null) {\n            inserts[insertName] = {\n              count: 1,\n              sizeA: Math.min(insert.sizeY, insert.sizeX),\n              color: insert.color,\n              sizeB: Math.max(insert.sizeY, insert.sizeX),\n            };\n          } else {\n            inserts[insertName].count++;\n          }\n        });\n\n      setInsertList(inserts);\n    });\n  }, [boxes]);\n\n  return (\n    <ShoppingListWrapper>\n      <div className=\"pricing-table\">\n        <h2>Boxes</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Count</th>\n              <th>Size</th>\n              <th>Article NR</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(boxList).map((boxId) => {\n              const box = boxList[boxId];\n\n              return (\n                <tr>\n                  <td>{box.count}</td>\n                  <td>{boxId}</td>\n                  <td>{containerNrs[boxId]}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"pricing-table\">\n        <h2>Inserts</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Count</th>\n              <th>Color</th>\n              <th>Size</th>\n              <th>Article NR</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(insertList).map((key) => {\n              const insert = insertList[key];\n              return (\n                <tr>\n                  <td>{insert.count}</td>\n                  <td>{insert.color.ral.toUpperCase()}</td>\n                  <td>\n                    {insert.sizeA}x{insert.sizeB}\n                  </td>\n\n                  <td>\n                    SB E {insert.sizeA}\n                    {insert.sizeB}{\" \"}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </ShoppingListWrapper>\n  );\n};\n\nexport default ShoppingList;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\n\nimport licenses from \"./licenses.json\";\n\nconst About = () => {\n  return (\n    <Container>\n      <h1>Boxomat</h1>\n      <a href=\"https://github.com/ElectricCookie/boxomat\">Github</a>\n      <p>Boxomat helps you plan assortments. </p>\n      <br />\n      <h2>Licensing</h2>\n      <p>Boxomat is licensed under the MIT license. </p>\n\n      <h2>Credits</h2>\n      <ul>\n        {Object.keys(licenses).map((packageName, index) => {\n          return (\n            <li key={index}>\n              <a\n                target=\"_bank\"\n                rel=\"noreferrer\"\n                href={licenses[packageName].repository}\n              >\n                {packageName}\n              </a>{\" \"}\n              &middot; License:{\" \"}\n              <a href={licenses[packageName].licenseUrl}>\n                {licenses[packageName].licenses}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default About;\n","import { Route, Switch, useRouteMatch } from \"react-router\";\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Menu } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport BoxPlanner from \"./BoxPlanner\";\nimport Editor from \"./Editor\";\nimport ShoppingList from \"./ShoppingList\";\nimport About from \"./About\";\nconst MenuLink = ({ path, children, exact }) => {\n  let match = useRouteMatch({\n    path,\n    exact,\n  });\n\n  let history = useHistory();\n\n  return (\n    <Menu.Item onClick={() => history.push(path)} active={match}>\n      {children}\n    </Menu.Item>\n  );\n};\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <BoxPlanner.Provider>\n        <BrowserRouter basename=\"/boxomat\">\n          <Menu inverted fixed=\"top\">\n            <Menu.Item header>Boxomat</Menu.Item>\n            <MenuLink path=\"/\" exact>\n              Editor\n            </MenuLink>\n            <MenuLink path=\"/shopping-list\">Shopping List</MenuLink>\n            <MenuLink path=\"/about\">About</MenuLink>\n          </Menu>\n\n          <Switch>\n            <Route path=\"/\" exact>\n              <Editor />\n            </Route>\n            <Route path=\"/shopping-list\">\n              <ShoppingList></ShoppingList>\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </BoxPlanner.Provider>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}